#%RAML 1.0
title: Programming Language Populariy
version: 1
baseUri: http://example.com
types:
  enumType:
    type: string
    description: A programming language name
    enum: [Ruby, Python, JavaScript]
  primitiveType:
    type: number
    description: This is a number type
  Entry: |
    {
      "type": "array",
      "items": {
        "$ref": "#/definitions/song"
      },
      "definitions": {
        "song": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "artist": {
              "type": "string"
            }
          }
        }
      }
    }
  AnotherEntry:
    type: Entry
    description: |
      This is just another entry to simulate that you can add facets also on JSON
      schema defined types. Although you can only add documentation-based facets.
  Person:
    properties:
      name:
        type: string
        xml:
          attribute: true
          name: "fullname"
      addresses:
        type: Address[]
        xml:
          wrapped: true
      tags:
        type: string[]
        description: list of tags.
  Address:
    properties:
      street: string
      city: string
  typeXml:
    type: |
      <?xml version="1.0" encoding="UTF-8"?>
      <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
        elementFormDefault="qualified" attributeFormDefault="unqualified">
        <xs:element name="song">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="title" type="xs:string" />
              <xs:element name="artist" type="xs:string" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:schema>
    example: |
      <?xml version="1.0" encoding="utf-8"?>
      <song>
      <title>str1234</title>
      <artist>str1234</artist>
      </song>
